{
  "openapi": "3.0.0",
  "paths": {
    "/categories": {
      "get": {
        "operationId": "CategoriesController_findAll",
        "security":[],
        "parameters": [],
        "responses": {
          "200": {
            "description": "If the categories are found, this endpoint will return an array with all the categories found.",
            "content" : {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref":"#/components/schemas/Categories"
                  }
                },
                  "example":[
                    {
                      "category_id": "category123",
                      "category_name": "PC",
                      "category_description": "description"
                    },
                    {
                      "category_id": "category123",
                      "category_name": "Screen",
                      "category_description": "description"
                    }
                  ]
              }
            }
          },
          "404": {
            "description": "If no category is found in the database, an HttpException will be returned with a status of 404 Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "No categories found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ]
      }
    },
    "/seller-users": {
      "post": {
        "operationId": "SellerUsersController_create",
        "security":[],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSellerUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If the user is created successfully, a message saying “User created successfully” will be sent.",
            "content":{
              "application/json":{
                "schema":{
                  "type":"string",
                  "example":"User created successfully"
                }
              }
            }
          },
          "409": {
            "description": "If an error occurs during user creation, an HttpException with status 409 and the error message will be sent.",
            "content":{
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Error creating user"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/change-password/{id}": {
      "post": {
        "operationId": "SellerUsersController_changePassword",
        "security":[{"authToken":[]}],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the password is changed without any problems, a message will be sent saying “User password successfully changed.”",
            "content":{
              "application/json":{
                "schema":{
                  "type":"string",
                  "example":"User password successfully changed."
                }
              }
            }
          },
          "500":{
            "description": "If the password change is not implemented, a message will be sent saying “Error changing password for seller user: error”",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 501
                    },
                    "message": {
                      "type": "string",
                      "example": "Error changing password for seller user: error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/verify/{id}": {
      "get": {
        "operationId": "SellerUsersController_verifyUser",
        "security":[],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the user verification is successful, a message saying “User successfully verified” will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User successfully verified"
                }
              }
            }
          },
          "500":{
            "description":"If an error occurs during the user verification, a message will be sent saying “Error verifying seller user: error”",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 501
                    },
                    "message": {
                      "type": "string",
                      "example": "Error verifying seller user:"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/{id}": {
      "get": {
        "operationId": "SellerUsersController_findInfo",
        "security":[{"authToken":[]}],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the user exists and has a valid JWT, an object containing the user's basic information will be returned.",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/SellerUser"
                }
              }
            }
          },
          "500": {
            "description": "If the user does not exist or the JWT is invalid, an error message 'Error finding seller user: error' will be returned.",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 501
                    },
                    "message": {
                      "type": "string",
                      "example": "Error finding seller user: error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SellerUsers"
        ]
      },
      "patch": {
        "operationId": "SellerUsersController_update",
        "security":[{"authToken":[]}],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSellerUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If the jwt is valid and the user exists, then it will return a success message.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User updated successfully"
                }
              }
            }
          },
          "500": {
            "description": "If the jwt is invalid or the user does not exist, an error message 'Error updating seller user: error' will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 501
                    },
                    "message": {
                      "type": "string",
                      "example": "Error updating seller user: error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SellerUsers"
        ]
      },
      "delete": {
        "operationId": "SellerUsersController_remove",
        "security":[{"authToken":[]}],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A message saying “User removed successfully” is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User removed successfully"
                }
              }
            }
          },
          "500":{
            "description": "If the jwt is invalid or the user does not exist, an error message 'Error removing seller user: error' will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 501
                    },
                    "message": {
                      "type": "string",
                      "example": "Error removing seller user: error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/login": {
      "post": {
        "operationId": "SellerUsersController_logIn",
        "security": [],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogInSellerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a JWT, which contains relevant user information so that they can interact with certain API endpoints.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "401":{
            "description":"If the user's password or email address is invalid, an authorization error will be displayed 'Invalid user or password'.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid user or password"
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description":"If there is an internal server error, a generic error message will be displayed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/brands": {
      "get": {
        "operationId": "BrandsController_findAll",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of all brands.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  },
                  "example":[
                    {
                      "brand_id": "brand123",
                      "name": "BrandName",
                      "description": "BrandDescription"
                    },
                    {
                      "brand_id": "brand456",
                      "name": "AnotherBrand",
                      "description": "AnotherBrandDescription"
                    }
                  ]
                }
              }
            }
          },
          "404":{
            "description": "If no brands are found, an error message will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "No brands found"
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description": "If there is an internal server error, a generic error message will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Brands"
        ]
      }
    },
    "/products": {
      "post": {
        "operationId": "ProductsController_create",
        "security": [{"authToken":[]}],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the created product.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500":{
            "description": "If there is an internal server error, a generic error message will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      },
      "get": {
        "operationId": "ProductsController_listAll",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a list of all products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListItem"
                  }
                },
                "example":[
                  {
                    "product_id": "664a66f0-12b8-45ab-a71c-181610261b9e",
                    "product_name": "product 1",
                    "price": "31.2",
                    "product_image": "productImage.png",
                    "brand_name": "Acer",
                    "category_name": "Screen"
                  },
                  {
                    "product_id": "664a66f0-12b8-45ab-a71c-181610261b9f",
                    "product_name": "product 2",
                    "price": "45.0",
                    "product_image": "productImage2.png",
                    "brand_name": "Dell",
                    "category_name": "Screen"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "If no products are found, an error message will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Products not found"
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description": "If there is an internal server error, a generic error message will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/my-products": {
      "post": {
        "operationId": "ProductsController_listSellerProducts",
        "security":[{"authToken":[]}],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of the seller's own products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSellerListItem"
                  }
                },
                "example":[
                  {
                    "product_id": "664a66f0-12b8-45ab-a71c-181610261b9e",
                    "seller_id": "e54d64d4-833b-43ba-96b9-97fc5fb4c276",
                    "category_id": "9997a30a-3bae-4a1f-95ae-39c396246e63",
                    "brand_id": "bcdeb73b-b97a-4c26-8ed6-17c15df4b7af",
                    "product_name": "product 1",
                    "price": "31.2",
                    "quantity": 12,
                    "description": "description",
                    "product_image": "productImage.png",
                    "product_status": true
                  },
                  {
                    "product_id": "664a66f0-12b8-45ab-a71c-181610261b9f",
                    "seller_id": "e54d64d4-833b-43ba-96b9-97fc5fb4c276",
                    "category_id": "9997a30a-3bae-4a1f-95ae-39c396246e63",
                    "brand_id": "bcdeb73b-b97a-4c26-8ed6-17c15df4b7af",
                    "product_name": "product 2",
                    "price": "45.0",
                    "quantity": 8,
                    "description": "description",
                    "product_image": "productImage2.png",
                    "product_status": true
                  }
                ]
              }
            }
          },
          "500":{
            "description": "If there is an internal server error, a generic error message will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "An error has occurred during the data extraction."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/update-product": {
      "post": {
        "operationId": "ProductsController_updateProduct",
        "security":[{"authToken":[]}],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates and returns an object with the new product data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUpdated"
                },
                "example":{
                  "product_id": "664a66f0-12b8-45ab-a71c-181610261b9e",
                  "seller_id": "e54d64d4-833b-43ba-96b9-97fc5fb4c276",
                  "category_id": "9997a30a-3bae-4a1f-95ae-39c396246e63",
                  "brand_id": "bcdeb73b-b97a-4c26-8ed6-17c15df4b7af",
                  "product_name": "product 1",
                  "price": "31.2",
                  "quantity": 12,
                  "description": "description",
                  "product_image": "productImage.png",
                  "product_status": true
                }
              }
            }
          },
          "500":{
            "description":"Return an error message when an internal server error occurs or the product is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "An error has occurred during the product update."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "ProductsController_getProductDetail",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with the product data.",
            "content": {
              "application/json": {
                "schema": {
                  "type":"object",
                  "properties":{
                    "product_id": {"type":"string"},
                    "seller_id": {"type":"string"},
                    "category_id": {"type":"string"},
                    "brand_id": {"type":"string"},
                    "product_name": {"type":"string"},
                    "price": {"type":"string"},
                    "quantity": {"type":"integer"},
                    "description": {"type":"string"},
                    "product_image": {"type":"string"},
                    "product_status": {"type":"boolean"},
                    "brand_name": {"type":"string"},
                    "category_name": {"type":"string"},
                    "seller_name": {"type":"string"}
                  }

                },
                "example":{
                  "product_id": "664a66f0-12b8-45ab-a71c-181610261b9e",
                  "seller_id": "e54d64d4-833b-43ba-96b9-97fc5fb4c276",
                  "category_id": "9997a30a-3bae-4a1f-95ae-39c396246e63",
                  "brand_id": "bcdeb73b-b97a-4c26-8ed6-17c15df4b7af",
                  "product_name": "product 1",
                  "price": "31.2",
                  "quantity": 12,
                  "description": "description",
                  "product_image": "productImage.png",
                  "product_status": true,
                  "brand_name": "brand 1",
                  "category_name": "category 1",
                  "seller_name": "seller 1"
                }
              }
            }
          },
          "404":{
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Product not found."
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description":"If an error occurs during the operation, an HTTP 500 error will be sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "An error has occurred getting the product details"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/buyer-users": {
      "post": {
        "operationId": "BuyerUsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBuyerUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "patch": {
        "operationId": "BuyerUsersController_updateUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBuyerUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "delete": {
        "operationId": "BuyerUsersController_deleteAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/login": {
      "post": {
        "operationId": "BuyerUsersController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/info": {
      "post": {
        "operationId": "BuyerUsersController_getUserData",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/change-password": {
      "post": {
        "operationId": "BuyerUsersController_changePassword",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/verify/{id}": {
      "get": {
        "operationId": "BuyerUsersController_verifyUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/address": {
      "post": {
        "operationId": "BuyerUsersController_createAddress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "get": {
        "operationId": "BuyerUsersController_findAddress",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/address/update": {
      "post": {
        "operationId": "BuyerUsersController_updateAddress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/address/{id}": {
      "delete": {
        "operationId": "BuyerUsersController_deleteAddress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/cards": {
      "post": {
        "operationId": "BuyerUsersController_addCart",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "get": {
        "operationId": "BuyerUsersController_findCards",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/cards/update": {
      "post": {
        "operationId": "BuyerUsersController_updateCard",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/cards/{id}": {
      "delete": {
        "operationId": "BuyerUsersController_deleteCard",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/sales": {
      "post": {
        "operationId": "SalesController_createSale",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      },
      "get": {
        "operationId": "SalesController_findAllSales",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales/sales-detail/{sale_id}": {
      "post": {
        "operationId": "SalesController_createSaleDetail",
        "parameters": [
          {
            "name": "sale_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      },
      "get": {
        "operationId": "SalesController_findSaleDetails",
        "parameters": [
          {
            "name": "sale_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      }
    }
  },
  "info": {
    "title": "E-commerce API",
    "description": "API for managing users, products, and purchases",
    "version": "1.0",
    "contact": {}
  },
  "tags": [{
      "name": "Categories",
      "description": "Operations related to product categories"
    },
    {
      "name": "Brands",
      "description": "Operations for brand management"
    },
    {
      "name": "BuyerUsers",
      "description": "Operations for buyer user management"
    },
    {
      "name": "Sales",
      "description": "Operations for sales management"
    },
    {
      "name": "Products",
      "description": "Operations for product management"
    },
    {
      "name": "SellerUsers",
      "description": "Operations for seller user management"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "authToken": {
        "scheme": "jwt",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "JWT token sent in the Authorization header without the 'Bearer' prefix (e.g., Authorization: <token>)"
      }
    },
    "schemas": {
      "CreateSellerUserDto": {
        "type": "object",
        "properties": {
          "seller_name": {"type": "string"},
          "company_name": {"type": "string"},
          "address": {"type": "string"},
          "user_password": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"},
          "user_type": {"type": "number"}
        },
        "example":{
          "seller_name":"the best seller",
          "address":"country,state,city,postalcode,neighborhood,street",
          "user_password":"strongpassword",
          "email":"seller@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890",
          "user_type":0
        }
      },
      "UpdateSellerUserDto": {
        "type": "object",
        "properties": {
          "seller_name": {"type": "string"},
          "company_name": {"type": "string"},
          "address": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"},
          "registration_date": {"type": "string", "format": "date"},
          "user_type": {"type": "number"}
        },
        "example":{
          "company_name":"the best company",
          "address":"country,state,city,postalcode,neighborhood,street",
          "email":"seller@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890",
          "user_type":1
        }
      },
      "LogInSellerDto": {
        "type": "object",
        "properties": {
          "email": {"type": "string"},
          "password": {"type": "string"}
        },
        "example":{
          "email":"seller@example.com",
          "password":"strongpassword"
        }
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "brand_id": {"type": "string"},
          "category_id": {"type": "string"},
          "product_name": {"type": "string"},
          "price": {"type": "number"},
          "quantity": {"type": "number"},
          "description": {"type": "string"},
          "product_image": {"type": "string"},
          "product_status": {"type": "string"}
        },
        "example":{
          "brand_id":"brand123",
          "category_id":"category123",
          "product_name":"Smartphone",
          "price":299.99,
          "quantity":50,
          "description":"Latest model with advanced features",
          "product_image":"image.jpg",
          "product_status":"available"
        }
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "brand_id": {"type": "string"},
          "category_id": {"type": "string"},
          "product_name": {"type": "string"},
          "price": {"type": "number"},
          "quantity": {"type": "number"},
          "description": {"type": "string"},
          "product_image": {"type": "string"},
          "product_status": {"type": "string"},
          "product_id": {"type": "string"}
        },
        "example":{
          "product_id":"product123",
          "brand_id":"brand123",
          "category_id":"category123",
          "product_name":"Smartphone",
          "price":299.99,
          "quantity":50,
          "description":"Latest model with advanced features",
          "product_image":"image.jpg",
          "product_status":"unavailable"
        }
      },
      "CreateBuyerUserDto": {
        "type": "object",
        "properties": {
          "user_name": {"type": "string"},
          "user_lastname": {"type": "string"},
          "user_password": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"}
        },
        "example":{
          "user_name":"John",
          "user_lastname":"Doe",
          "user_password":"strongpassword",
          "email":"buyer@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890"
        }
      },
      "LoginDataDto": {
        "type": "object",
        "properties": {
          "email": {"type": "string"},
          "password": {"type": "string"}
        },
        "example":{
          "email":"buyer@example.com",
          "password":"strongpassword"
        }
      },
      "UpdateBuyerUserDto": {
        "type": "object",
        "properties": {
          "user_name": {"type": "string"},
          "user_lastname": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"}
        },
        "example":{
          "user_name":"John",
          "user_lastname":"Doe",
          "email":"buyer@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890"
        }
      },
      "CreateAddressDto": {
        "type": "object",
        "properties": {
          "address": {"type": "string"}
        },
        "example":{
          "address":"123 Main St, Anytown, USA"
        }
      },
      "UpdateAddressDto": {
        "type": "object",
        "properties": {
          "address_id": {"type": "string"},
          "address": {"type": "string"}
        },
        "example":{
          "address_id":"address123",
          "address":"123 Main St, Anytown, USA"
        }
      },
      "CreateCardDto": {
        "type": "object",
        "properties": {
          "card_number": {"type": "string"},
          "expiration_date": {"type": "string"},
          "card_holder": {"type": "string"}
        },
        "example":{
          "card_number":"4111111111111111",
          "expiration_date":"12/25",
          "card_holder":"John Doe"
        }
      },
      "UpdateCardDto": {
        "type": "object",
        "properties": {
          "card_id": {"type": "string"},
          "card_number": {"type": "string"},
          "expiration_date": {"type": "string"},
          "card_holder": {"type": "string"}
        },
        "example":{
          "card_id":"card123",
          "card_number":"4111111111111111",
          "expiration_date":"12/25",
          "card_holder":"John Does"
        }
      },
      "CreateSaleDto": {
        "type": "object",
        "properties": {
          "buyer_id": {"type": "string"},
          "amount": {"type": "number"}
        },
        "example":{
          "buyer_id":"buyer123",
          "amount":99.99
        }
      },
      "CreateSalesDetailDto":{
        "type":"object",
        "properties":{
          "product_id": {"type": "string"},
          "unite_price": {"type": "number"},
          "quantity": {"type": "number"}
        },
        "example":{
          "product_id":"product123",
          "unite_price":299.99,
          "quantity":1
        }
      },
      "Categories":{
        "type": "object",
        "properties": {
          "category_id": {"type": "string"},
          "category_name": {"type": "string"},
          "category_description": {"type": "string"}
        },
        "example":{
          "category_id": "category123",
          "category_name": "PC",
          "category_description": "description"
        }
      },
      "SellerUser":{
        "type":"object",
        "properties": {
          "seller_name": {"type": "string"},
          "company_name": {"type": "string"},
          "address": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"},
          "user_type": {"type": "integer"}
        },
        "example":{
          "seller_name": "Seller_Test",
          "company_name": null,
          "address": "Calle 00,00-00,city,country,neigborhood,postalcode",
          "email": "xstremiscx12@gmail.com",
          "user_image": "/basic_user_image.png",
          "cellphone_number": "0000000000",
          "user_type": 0
        }
      },
      "Brand":{
        "type": "object",
        "properties": {
          "brand_id": {"type": "string"},
          "brand_name": {"type": "string"},
          "description": {"type": "string"}
        },
        "example":{
          "brand_id": "brand123",
          "brand_name": "BrandName",
          "description": "BrandDescription"
        }
      },
      "Product":{
        "type":"object",
        "properties":{
          "message": {"type":"string"},
          "product_object": {
              "product_id": {"type":"string"},
              "seller_id": {"type":"string"},
              "category_id": {"type":"string"},
              "brand_id": {"type":"string"},
              "product_name": {"type":"string"},
              "price": {"type":"string"},
              "quantity": {"type":"integer"},
              "description": {"type":"string"},
              "product_image": {"type":"string"},
              "product_status": {"type":"boolean"}
          }
        },
        "example":{
          "message": "Product created successfully.",
          "product_object": {
            "product_id": "ccef3f06-730c-4311-8dbf-364f7b6afbc9",
            "seller_id": "e54d64d4-833b-43ba-96b9-97fc5fb4c276",
            "category_id": "9997a30a-3bae-4a1f-95ae-39c396246e63",
            "brand_id": "bcdeb73b-b97a-4c26-8ed6-17c15df4b7af",
            "product_name": "MSI Dragon Design hz144 full hd",
            "price": "9000000",
            "quantity": 18,
            "description": "description",
            "product_image": "productImage.png",
            "product_status": true
          }
        }
      },
      "ProductListItem": {
        "type": "object",
        "properties": {
          "product": {
            "product_id": {"type": "string"},
            "product_name": {"type": "string"},
            "price": {"type": "string"},
            "product_image": {"type": "string"},
            "brand_name": {"type": "string"},
            "category_name": {"type": "string"}
          }
        },
        "example": {
          "product": {
            "product_id": "664a66f0-12b8-45ab-a71c-181610261b9e",
            "product_name": "product 1",
            "price": "31.2",
            "product_image": "productImage.png",
            "brand_name": "Acer",
            "category_name": "Screen"
          }
        }
      },
      "ProductSellerListItem":{
        "type": "object",
        "properties": {
          "product": {
            "product_id": {"type": "string"},
            "seller_id": {"type": "string"},
            "category_id": {"type": "string"},
            "brand_id": {"type": "string"},
            "product_name": {"type": "string"},
            "price": {"type": "string"},
            "quantity": {"type": "integer"},
            "description": {"type": "string"},
            "product_image": {"type": "string"},
            "product_status": {"type": "boolean"}
          }
        },
        "example": {
          "product": {
            "product_id": "664a66f0-12b8-45ab-a71c-181610261b9e",
            "seller_id": "e54d64d4-833b-43ba-96b9-97fc5fb4c276",
            "category_id": "9997a30a-3bae-4a1f-95ae-39c396246e63",
            "brand_id": "bcdeb73b-b97a-4c26-8ed6-17c15df4b7af",
            "product_name": "product 1",
            "price": "31.2",
            "quantity": 12,
            "description": "description",
            "product_image": "productImage.png",
            "product_status": true
          }
        }
      },
      "ProductUpdated":{
        "type":"object",
        "properties":{
          "product_id": {"type":"string"},
          "seller_id": {"type":"string"},
          "category_id": {"type":"string"},
          "brand_id": {"type":"string"},
          "product_name": {"type":"string"},
          "price": {"type":"string"},
          "quantity": {"type":"integer"},
          "description": {"type":"string"},
          "product_image": {"type":"string"},
          "product_status": {"type":"boolean"}
        },
        "example":{
          "product_id": "664a66f0-12b8-45ab-a71c-181610261b9e",
          "seller_id": "e54d64d4-833b-43ba-96b9-97fc5fb4c276",
          "category_id": "9997a30a-3bae-4a1f-95ae-39c396246e63",
          "brand_id": "bcdeb73b-b97a-4c26-8ed6-17c15df4b7af",
          "product_name": "product 1",
          "price": "31.2",
          "quantity": 12,
          "description": "description",
          "product_image": "productImage.png",
          "product_status": true
        }
      }
    }
  }
}