{
  "openapi": "3.0.0",
  "paths": {
    "/categories": {
      "get": {
        "operationId": "CategoriesController_findAll",
        "security":[],
        "parameters": [],
        "responses": {
          "200": {
            "description": "If the categories are found, this endpoint will return an array with all the categories found.",
            "content" : {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref":"#/components/schemas/Categories"
                  }
                },
                  "example":[
                    {
                      "category_id": "category123",
                      "category_name": "PC",
                      "category_description": "description"
                    },
                    {
                      "category_id": "category123",
                      "category_name": "Screen",
                      "category_description": "description"
                    }
                  ]
              }
            }
          },
          "404": {
            "description": "If no category is found in the database, an HttpException will be returned with a status of 404 Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "No categories found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ]
      }
    },
    "/seller-users": {
      "post": {
        "operationId": "SellerUsersController_create",
        "security":[],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSellerUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "If the user is created successfully, a message saying “User created successfully” will be sent."
          },
          "409": {
            "description": "If an error occurs during user creation, an HttpException with status 409 and the error message will be sent."
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/change-password/{id}": {
      "post": {
        "operationId": "SellerUsersController_changePassword",
        "security":[{"authToken":[]}],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "If the password is changed without any problems, a message will be sent saying “User password successfully changed.”"
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/verify/{id}": {
      "get": {
        "operationId": "SellerUsersController_verifyUser",
        "security":[],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the user verification is successful, a message saying “User successfully verified” will be returned."
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/{id}": {
      "get": {
        "operationId": "SellerUsersController_findInfo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SellerUsers"
        ]
      },
      "patch": {
        "operationId": "SellerUsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSellerUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SellerUsers"
        ]
      },
      "delete": {
        "operationId": "SellerUsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/seller-users/login": {
      "post": {
        "operationId": "SellerUsersController_logIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogInSellerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "SellerUsers"
        ]
      }
    },
    "/brands": {
      "get": {
        "operationId": "BrandsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Brands"
        ]
      }
    },
    "/products": {
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "get": {
        "operationId": "ProductsController_listAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/my-products": {
      "post": {
        "operationId": "ProductsController_listSellerProducts",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/update-product": {
      "post": {
        "operationId": "ProductsController_updateProduct",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "ProductsController_getProductDetail",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/buyer-users": {
      "post": {
        "operationId": "BuyerUsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBuyerUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "patch": {
        "operationId": "BuyerUsersController_updateUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBuyerUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "delete": {
        "operationId": "BuyerUsersController_deleteAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/login": {
      "post": {
        "operationId": "BuyerUsersController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDataDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/info": {
      "post": {
        "operationId": "BuyerUsersController_getUserData",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/change-password": {
      "post": {
        "operationId": "BuyerUsersController_changePassword",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/verify/{id}": {
      "get": {
        "operationId": "BuyerUsersController_verifyUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/address": {
      "post": {
        "operationId": "BuyerUsersController_createAddress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatAddressDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "get": {
        "operationId": "BuyerUsersController_findAddress",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/address/update": {
      "post": {
        "operationId": "BuyerUsersController_updateAddress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/address/{id}": {
      "delete": {
        "operationId": "BuyerUsersController_deleteAddress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/cards": {
      "post": {
        "operationId": "BuyerUsersController_addCart",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      },
      "get": {
        "operationId": "BuyerUsersController_findCards",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/cards/update": {
      "post": {
        "operationId": "BuyerUsersController_updateCard",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/buyer-users/cards/{id}": {
      "delete": {
        "operationId": "BuyerUsersController_deleteCard",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "BuyerUsers"
        ]
      }
    },
    "/sales": {
      "post": {
        "operationId": "SalesController_createSale",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      },
      "get": {
        "operationId": "SalesController_findAllSales",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      }
    },
    "/sales/sales-detail/{sale_id}": {
      "post": {
        "operationId": "SalesController_createSaleDetail",
        "parameters": [
          {
            "name": "sale_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      },
      "get": {
        "operationId": "SalesController_findSaleDetails",
        "parameters": [
          {
            "name": "sale_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Sales"
        ]
      }
    }
  },
  "info": {
    "title": "E-commerce API",
    "description": "API for managing users, products, and purchases",
    "version": "1.0",
    "contact": {}
  },
  "tags": ["Categories","Brands","BuyerUsers","Sales","Products","SellerUsers"],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "authToken": {
        "scheme": "jwt",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "JWT token sent in the Authorization header without the 'Bearer' prefix (e.g., Authorization: <token>)"
      }
    },
    "schemas": {
      "CreateSellerUserDto": {
        "type": "object",
        "properties": {
          "seller_name": {"type": "string"},
          "company_name": {"type": "string"},
          "address": {"type": "string"},
          "user_password": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"},
          "user_type": {"type": "number"}
        },
        "example":{
          "seller_name":"the best seller",
          "address":"country,state,city,postalcode,neighborhood,street",
          "user_password":"strongpassword",
          "email":"seller@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890",
          "user_type":0
        }
      },
      "UpdateSellerUserDto": {
        "type": "object",
        "properties": {
          "seller_name": {"type": "string"},
          "company_name": {"type": "string"},
          "address": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"},
          "registration_date": {"type": "string", "format": "date"},
          "user_type": {"type": "number"}
        },
        "example":{
          "company_name":"the best company",
          "address":"country,state,city,postalcode,neighborhood,street",
          "email":"seller@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890",
          "user_type":1
        }
      },
      "LogInSellerDto": {
        "type": "object",
        "properties": {
          "email": {"type": "string"},
          "password": {"type": "string"}
        },
        "example":{
          "email":"seller@example.com",
          "password":"strongpassword"
        }
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "brand_id": {"type": "string"},
          "category_id": {"type": "string"},
          "product_name": {"type": "string"},
          "price": {"type": "number"},
          "quantity": {"type": "number"},
          "description": {"type": "string"},
          "product_image": {"type": "string"},
          "product_status": {"type": "string"}
        },
        "example":{
          "brand_id":"brand123",
          "category_id":"category123",
          "product_name":"Smartphone",
          "price":299.99,
          "quantity":50,
          "description":"Latest model with advanced features",
          "product_image":"image.jpg",
          "product_status":"available"
        }
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "brand_id": {"type": "string"},
          "category_id": {"type": "string"},
          "product_name": {"type": "string"},
          "price": {"type": "number"},
          "quantity": {"type": "number"},
          "description": {"type": "string"},
          "product_image": {"type": "string"},
          "product_status": {"type": "string"},
          "product_id": {"type": "string"}
        },
        "example":{
          "product_id":"product123",
          "brand_id":"brand123",
          "category_id":"category123",
          "product_name":"Smartphone",
          "price":299.99,
          "quantity":50,
          "description":"Latest model with advanced features",
          "product_image":"image.jpg",
          "product_status":"unavailable"
        }
      },
      "CreateBuyerUserDto": {
        "type": "object",
        "properties": {
          "user_name": {"type": "string"},
          "user_lastname": {"type": "string"},
          "user_password": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"}
        },
        "example":{
          "user_name":"John",
          "user_lastname":"Doe",
          "user_password":"strongpassword",
          "email":"buyer@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890"
        }
      },
      "LoginDataDto": {
        "type": "object",
        "properties": {
          "email": {"type": "string"},
          "password": {"type": "string"}
        },
        "example":{
          "email":"buyer@example.com",
          "password":"strongpassword"
        }
      },
      "UpdateBuyerUserDto": {
        "type": "object",
        "properties": {
          "user_name": {"type": "string"},
          "user_lastname": {"type": "string"},
          "email": {"type": "string"},
          "user_image": {"type": "string"},
          "cellphone_number": {"type": "string"}
        },
        "example":{
          "user_name":"John",
          "user_lastname":"Doe",
          "email":"buyer@example.com",
          "user_image":"image_url",
          "cellphone_number":"1234567890"
        }
      },
      "CreateAddressDto": {
        "type": "object",
        "properties": {
          "address": {"type": "string"}
        },
        "example":{
          "address":"123 Main St, Anytown, USA"
        }
      },
      "UpdateAddressDto": {
        "type": "object",
        "properties": {
          "address_id": {"type": "string"},
          "address": {"type": "string"}
        },
        "example":{
          "address_id":"address123",
          "address":"123 Main St, Anytown, USA"
        }
      },
      "CreateCardDto": {
        "type": "object",
        "properties": {
          "card_number": {"type": "string"},
          "expiration_date": {"type": "string"},
          "card_holder": {"type": "string"}
        },
        "example":{
          "card_number":"4111111111111111",
          "expiration_date":"12/25",
          "card_holder":"John Doe"
        }
      },
      "UpdateCardDto": {
        "type": "object",
        "properties": {
          "card_id": {"type": "string"},
          "card_number": {"type": "string"},
          "expiration_date": {"type": "string"},
          "card_holder": {"type": "string"}
        },
        "example":{
          "card_id":"card123",
          "card_number":"4111111111111111",
          "expiration_date":"12/25",
          "card_holder":"John Does"
        }
      },
      "CreateSaleDto": {
        "type": "object",
        "properties": {
          "buyer_id": {"type": "string"},
          "amount": {"type": "number"}
        },
        "example":{
          "buyer_id":"buyer123",
          "amount":99.99
        }
      },
      "CreateSalesDetailDto":{
        "type":"object",
        "properties":{
          "product_id": {"type": "string"},
          "unite_price": {"type": "number"},
          "quantity": {"type": "number"}
        },
        "example":{
          "product_id":"product123",
          "unite_price":299.99,
          "quantity":1
        }
      },
      "Categories":{
        "type": "object",
        "properties": {
          "category_id": {"type": "string"},
          "category_name": {"type": "string"},
          "category_description": {"type": "string"}
        },
        "example":{
          "category_id": "category123",
          "category_name": "PC",
          "category_description": "description"
        }
      }
    }
  }
}